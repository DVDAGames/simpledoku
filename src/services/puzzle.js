const { random, filter } = require('lodash');

const PuzzleService = {
  puzzles: [
    {
      id: 1,
      solution: [
        [2, 1, 7, 4, 9, 8, 5, 6, 3],
        [5, 6, 4, 3, 1, 7, 9, 2, 8],
        [3, 9, 8, 2, 6, 5, 7, 1, 4],
        [4, 7, 1, 5, 3, 2, 6, 8, 9],
        [6, 3, 9, 1, 8, 4, 2, 5, 7],
        [8, 5, 2, 9, 7, 6, 3, 4, 1],
        [9, 2, 3, 8, 5, 1, 4, 7, 6],
        [1, 4, 6, 7, 2, 3, 8, 9, 5],
        [7, 8, 5, 6, 4, 9, 1, 3, 2]
      ],
      puzzle: [
        [2, 0, 0, 4, 0, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0, 9, 0, 8],
        [0, 9, 0, 0, 0, 0, 0, 0, 0],
        [0, 7, 1, 5, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 8, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 4, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 4, 0, 0, 2, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0]
      ]
    },
    {
      id: 2,
      solution: [
        [4, 5, 1, 8, 6, 3, 7, 2, 9],
        [9, 7, 3, 2, 1, 5, 6, 8, 4],
        [8, 2, 6, 7, 4, 9, 5, 1, 3],
        [6, 8, 7, 3, 2, 1, 4, 9, 5],
        [1, 4, 2, 5, 9, 6, 3, 7, 8],
        [3, 9, 5, 4, 7, 8, 2, 6, 1],
        [7, 3, 4, 9, 8, 2, 1, 5, 6],
        [5, 1, 8, 6, 3, 7, 9, 4, 2],
        [2, 6, 9, 1, 5, 4, 8, 3, 7]
      ],
      puzzle: [
        [0, 0, 0, 8, 0, 0, 0, 2, 9],
        [0, 7, 0, 0, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 5, 0, 3],
        [0, 0, 7, 3, 0, 0, 4, 0, 0],
        [1, 0, 0, 0, 0, 0, 0, 7, 0],
        [0, 0, 5, 0, 7, 0, 0, 0, 0],
        [7, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 8, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 4, 0, 0, 0]
      ]
    },
    {
      id: 3,
      solution: [
        [4, 7, 5, 2, 9, 1, 6, 3, 8],
        [1, 6, 8, 3, 7, 5, 4, 2, 9],
        [2, 3, 9, 6, 4, 8, 1, 7, 5],
        [8, 1, 3, 4, 5, 7, 9, 6, 2],
        [9, 4, 6, 1, 8, 2, 3, 5, 7],
        [5, 2, 7, 9, 3, 6, 8, 1, 4],
        [3, 9, 2, 7, 1, 4, 5, 8, 6],
        [6, 8, 4, 5, 2, 3, 7, 9, 1],
        [7, 5, 1, 8, 6, 9, 2, 4, 3]
      ],
      puzzle: [
        [0, 7, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 4, 0, 0],
        [0, 0, 9, 0, 4, 8, 0, 0, 0],
        [0, 0, 3, 4, 0, 0, 0, 0, 0],
        [0, 4, 0, 1, 0, 0, 0, 5, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 7, 1, 0, 0, 8, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 9, 0, 0, 0]
      ]
    },
    {
      id: 4,
      solution: [
        [2, 6, 5, 8, 7, 1, 4, 9, 3],
        [4, 1, 3, 2, 9, 5, 8, 7, 6],
        [7, 8, 9, 3, 6, 4, 2, 5, 1],
        [6, 7, 1, 4, 2, 9, 5, 3, 8],
        [9, 5, 2, 1, 3, 8, 6, 4, 7],
        [8, 3, 4, 6, 5, 7, 1, 2, 9],
        [1, 2, 8, 7, 4, 3, 9, 6, 5],
        [3, 9, 6, 5, 8, 2, 7, 1, 4],
        [5, 4, 7, 9, 1, 6, 3, 8, 2]
      ],
      puzzle: [
        [0, 6, 0, 0, 0, 1, 4, 0, 0],
        [0, 0, 3, 0, 9, 0, 0, 0, 0],
        [0, 8, 0, 0, 0, 0, 0, 0, 1],
        [6, 0, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 5, 0, 1, 0, 0],
        [0, 2, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 5, 0, 0, 7, 0, 0],
        [5, 0, 7, 0, 0, 0, 0, 0, 0]
      ]
    },
    {
      id: 5,
      solution: [
        [5, 6, 8, 3, 7, 2, 9, 4, 1],
        [4, 7, 3, 9, 6, 1, 5, 2, 8],
        [1, 2, 9, 4, 5, 8, 3, 6, 7],
        [8, 4, 1, 2, 3, 5, 7, 9, 6],
        [6, 9, 7, 1, 8, 4, 2, 3, 5],
        [3, 5, 2, 6, 9, 7, 1, 8, 4],
        [9, 1, 5, 8, 4, 3, 6, 7, 2],
        [7, 8, 6, 5, 2, 9, 4, 1, 3],
        [2, 3, 4, 7, 1, 6, 8, 5, 9]
      ],
      puzzle: [
        [0, 0, 0, 3, 7, 0, 0, 0, 0],
        [4, 0, 0, 0, 6, 1, 0, 0, 0],
        [0, 2, 0, 0, 0, 0, 0, 6, 0],
        [0, 0, 0, 0, 3, 0, 7, 9, 0],
        [0, 0, 0, 1, 8, 0, 0, 0, 0],
        [0, 5, 2, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 8, 0, 0, 0, 7, 2],
        [0, 8, 0, 5, 0, 9, 0, 0, 0],
        [0, 0, 4, 7, 1, 6, 0, 0, 0]
      ]
    }
  ],
  getPuzzle(solved) {
    const solvedArray = solved.split(',');

    solvedArray.forEach((item, index) => {
      solvedArray[index] = parseInt(item, 10);
    });

    const puzzles = filter(this.puzzles, (obj) => {
      return solvedArray.indexOf(obj.id) === -1;
    });

    const randomPuzzle = puzzles[random(0, puzzles.length - 1)];

    if(randomPuzzle) {
      randomPuzzle.totalPuzzles = this.puzzles.length;
    }

    return randomPuzzle;
  }
};

module.exports = PuzzleService;
